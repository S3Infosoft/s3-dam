version: "3"

networks:
  bridge:
    driver: bridge

services:
  app:
    container_name: django
    restart: always
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    environment:
      - DB_NAME=app
      - DB_USER=insights
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      - db
    networks:
      - bridge
    command: >
      sh -c "mkdir -p logs media &&
             python manage.py runserver 0.0.0.0:8000"

  db:
    image: postgres:11.4-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - bridge
    environment:
      - POSTGRES_USER=insights
      - POSTGRES_DB=app

  mayan:
    depends_on:
      - mayandb
      - redis
    environment: &mayan_env
      MAYAN_CELERY_BROKER_URL: redis://:${MAYAN_REDIS_PASSWORD:-mayanredispassword}@redis:6379/0
      MAYAN_CELERY_RESULT_BACKEND: redis://:${MAYAN_REDIS_PASSWORD:-mayanredispassword}@redis:6379/1
      MAYAN_DATABASES: "{'default':{'ENGINE':'django.db.backends.postgresql','NAME':'mayan','USER':'insights','HOST':'mayandb'}}"
      MAYAN_DOCKER_WAIT: "mayandb:5432 redis:6379"
    image: mayanedms/mayanedms:3
    networks:
      - bridge
    ports:
      - "80:8000"
    restart: unless-stopped
    volumes:
      - MAYAN_APP_VOLUME:/var/lib/mayan

  mayandb:
    image: postgres:11.4-alpine
    container_name: mayanPostgres
    networks:
      - bridge
    volumes:
      - mayandb_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=insights
      - POSTGRES_DB=mayan

  redis:
    command:
      - redis-server
      - --appendonly
      - "no"
      - --databases
      - "2"
      - --maxmemory
      - "100mb"
      - --maxclients
      - "500"
      - --maxmemory-policy
      - "allkeys-lru"
      - --save
      - ""
      - --tcp-backlog
      - "256"
      - --requirepass
      - "${MAYAN_REDIS_PASSWORD:-mayanredispassword}"
    image: redis:5.0-alpine
    networks:
      - bridge
    restart: unless-stopped
    volumes:
      - ${MAYAN_REDIS_VOLUME:-redis}:/data

  background_tasks:
    restart: always
    container_name: process_tasks
    build:
      context: .
    depends_on:
      - app
      - db
    environment:
      - DB_NAME=app
      - DB_USER=insights
      - DB_HOST=db
      - DB_PORT=5432
    volumes:
      - ./app:/app
    command: >
      sh -c "python manage.py process_tasks --sleep=3 --log-std --traceback"

volumes:
  postgres_data:
  mayandb_data:
  MAYAN_APP_VOLUME:
  redis:
